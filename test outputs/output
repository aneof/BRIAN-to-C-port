F_input1
[ 3.00046669  3.00119471  3.00293851  3.00694417  3.01576674  3.03439471
  3.0720891   3.14516962  3.28087308  3.52212284  3.93253145  4.60023037
  5.63833385  7.17931602  9.36075831 12.30123886 16.06775312 20.63962165
 25.87735603 31.50694101 37.12900474 42.25769994 46.38646828 49.06933765
 50.         49.06933765 46.38646828 42.25769994 37.12900474 31.50694101
 25.87735603 20.63962165 16.06775312 12.30123886  9.36075831  7.17931602
  5.63833385  4.60023037  3.93253145  3.52212284  3.28087308  3.14516962
  3.0720891   3.03439471  3.01576674  3.00694417  3.00293851  3.00119471
  3.00046669  3.00017515  3.00006316  3.00002188  3.00000728  3.00000233
  3.00000072  3.00000021  3.00000006  3.00000002  3.          3.
  3.          3.          3.          3.          3.          3.
  3.          3.          3.          3.          3.          3.
  3.          3.          3.          3.          3.          3.
  3.          3.          3.          3.          3.          3.
  3.          3.          3.          3.          3.          3.
  3.          3.          3.          3.          3.          3.
  3.          3.          3.          3.        ]
0*amp/second
(c*(vm-EL)-x)/tauw
-(vt-vtrest)/tauvt
(gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C
0*amp/second
(c*(vm-EL)-x)/tauw
-(vt-vtrest)/tauvt
(gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C
Magic
0*amp/second
0*1.0/1.0
(c*(vm-EL)-x)/tauw
(4e-09*(vm+0.0706)-x)/0.14400000000000002
-(vt-vtrest)/tauvt
-(vt+0.045)/0.05
(gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C
(3.0000000000000004e-08*(-0.0706-vm)+3.0000000000000004e-08*0.002*exp((vm-vt)/0.002)+I-x)/2.81e-10
1
Vt
[-0.045]
Vm
[-0.0706]
NeuronGroup done
1
expr
<_sre.SRE_Pattern object at 0x7f35fd3c2030>
pre
I=s*A*R*u; 
U=clip(U+etaU*(-AFBn*FBn*FBp + AFBp*FBp*FFp),Umin,Umax);
w=U*A;
FFp+=1; R-=R*u; u+=U*(1-u)

Synapses//////////////////////////////////////////////////////
i= 25 SpikeArray[i]= 0
i = 25, j = 0
i= 46 SpikeArray[i]= 0
i = 46, j = 0
j: 0, neurons[j]= 0.000000j: 0, neurons[j]= 0.000000
Synapses//////////////////////////////////////////////////////
i= 25 SpikeArray[i]= 0
i = 25, j = 0
j: 0, neurons[j]= 0.000000
Synapses//////////////////////////////////////////////////////
i= 24 SpikeArray[i]= 0
i = 24, j = 0
i= 31 SpikeArray[i]= 0
i = 31, j = 0
j: 0, neurons[j]= 0.000000j: 0, neurons[j]= 0.000000i = 0, j = 0
i = 0, j = 1
i = 0, j = 2
i = 0, j = 3
i = 0, j = 4
i = 0, j = 5
i = 0, j = 6
i = 0, j = 7
i = 0, j = 8
i = 0, j = 9
i = 0, j = 10
i = 0, j = 11
i = 0, j = 12
i = 0, j = 13
i = 0, j = 14
i = 0, j = 15
i = 0, j = 16
i = 0, j = 17
i = 0, j = 18
i = 0, j = 19
i = 0, j = 20
i = 0, j = 21
i = 0, j = 22
i = 0, j = 23
i = 0, j = 24
i = 0, j = 25
i = 0, j = 26
i = 0, j = 27
i = 0, j = 28
i = 0, j = 29
i = 0, j = 30
i = 0, j = 31
i = 0, j = 32
i = 0, j = 33
i = 0, j = 34
i = 0, j = 35
i = 0, j = 36
i = 0, j = 37
i = 0, j = 38
i = 0, j = 39
i = 0, j = 40
i = 0, j = 41
i = 0, j = 42
i = 0, j = 43
i = 0, j = 44
i = 0, j = 45
i = 0, j = 46
i = 0, j = 47
i = 0, j = 48
i = 0, j = 49
i = 0, j = 50
i = 0, j = 51
i = 0, j = 52
i = 0, j = 53
i = 0, j = 54
i = 0, j = 55
i = 0, j = 56
i = 0, j = 57
i = 0, j = 58
i = 0, j = 59
i = 0, j = 60
i = 0, j = 61
i = 0, j = 62
i = 0, j = 63
i = 0, j = 64
i = 0, j = 65
i = 0, j = 66
i = 0, j = 67
i = 0, j = 68
i = 0, j = 69
i = 0, j = 70
i = 0, j = 71
i = 0, j = 72
i = 0, j = 73
i = 0, j = 74
i = 0, j = 75
i = 0, j = 76
i = 0, j = 77
i = 0, j = 78
i = 0, j = 79
i = 0, j = 80
i = 0, j = 81
i = 0, j = 82
i = 0, j = 83
i = 0, j = 84
i = 0, j = 85
i = 0, j = 86
i = 0, j = 87
i = 0, j = 88
i = 0, j = 89
i = 0, j = 90
i = 0, j = 91
i = 0, j = 92
i = 0, j = 93
i = 0, j = 94
i = 0, j = 95
i = 0, j = 96
i = 0, j = 97
i = 0, j = 98
i = 0, j = 99
mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00mean = 0.000000e+00
Synapses//////////////////////////////////////////////////////

lastupdate=t

Synapses//////////////////////////////////////////////////////
i= 28 SpikeArray[i]= 0
i = 28, j = 0
j: 0, neurons[j]= 0.000000
Synapses//////////////////////////////////////////////////////
i= 22 SpikeArray[i]= 0
i = 22, j = 0
j: 0, neurons[j]= 0.000000
Synapses//////////////////////////////////////////////////////
i= 22 SpikeArray[i]= 0
i = 22, j = 0
j: 0, neurons[j]= 0.000000
Synapses//////////////////////////////////////////////////////
i= 23 SpikeArray[i]= 0
i = 23, j = 0
i= 26 SpikeArray[i]= 0
i = 26, j = 0
i= 35 SpikeArray[i]= 0
i = 35, j = 0
j: 0, neurons[j]= 0.000000j: 0, neurons[j]= 0.000000j: 0, neurons[j]= 0.000000
Synapses//////////////////////////////////////////////////////
i= 19 SpikeArray[i]= 0
i = 19, j = 0
j: 0, neurons[j]= 0.000000
Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////
i= 68 SpikeArray[i]= 0
i = 68, j = 0
j: 0, neurons[j]= 0.000000
Synapses//////////////////////////////////////////////////////
i= 32 SpikeArray[i]= 0
i = 32, j = 0
j: 0, neurons[j]= 0.000000
Synapses//////////////////////////////////////////////////////
i= 31 SpikeArray[i]= 0
i = 31, j = 0
j: 0, neurons[j]= 0.000000
Synapses//////////////////////////////////////////////////////
i= 21 SpikeArray[i]= 0
i = 21, j = 0
i= 77 SpikeArray[i]= 0
i = 77, j = 0
j: 0, neurons[j]= 0.000000j: 0, neurons[j]= 0.000000
Synapses//////////////////////////////////////////////////////

lastupdate=t

_namespace
{'etaU': 0.15, 'clip': <function clip at 0x7f360de45398>, '_original_code_string': "_post_neurons = _post.data.take(_synapses)\n_perm = _post_neurons.argsort(kind='mergesort')\n_aux = _post_neurons.take(_perm)\n_flag = empty(len(_aux)+1, dtype=bool)\n_flag[0] = _flag[-1] = 1\nnot_equal(_aux[1:], _aux[:-1], _flag[1:-1])\n_F = _flag.nonzero()[0][:-1]\nlogical_not(_flag, _flag)\nwhile len(_F):\n    _u = _aux.take(_F)\n    _i = _perm.take(_F)\n    FFp[_synapses[_i]]=FFp[_synapses[_i]]*exp(-(-lastupdate[_synapses[_i]] + t)/tau_FFp)\n    FBn[_synapses[_i]]=FBn[_synapses[_i]]*exp(-(-lastupdate[_synapses[_i]] + t)/tau_FBn)\n    u[_synapses[_i]]=U[_synapses[_i]] + (-U[_synapses[_i]] + u[_synapses[_i]])*exp(-(-lastupdate[_synapses[_i]] + t)/tau_u)\n    FBp[_synapses[_i]]=FBp[_synapses[_i]]*exp(-(-lastupdate[_synapses[_i]] + t)/tau_FBp)\n    R[_synapses[_i]]=(R[_synapses[_i]] - 1)*exp(-(-lastupdate[_synapses[_i]] + t)/tau_r) + 1\n    _target_I[_u]=s*A[_synapses[_i]]*R[_synapses[_i]]*u[_synapses[_i]]; \n    U[_synapses[_i]]=clip(U[_synapses[_i]]+etaU*(-AFBn*FBn[_synapses[_i]]*FBp[_synapses[_i]] + AFBp*FBp[_synapses[_i]]*FFp[_synapses[_i]]),Umin,Umax);\n    w[_synapses[_i]]=U[_synapses[_i]]*A[_synapses[_i]];\n    FFp[_synapses[_i]]+=1; R[_synapses[_i]]-=R[_synapses[_i]]*u[_synapses[_i]]; u[_synapses[_i]]+=U[_synapses[_i]]*(1-u[_synapses[_i]])\n    \n    lastupdate[_synapses[_i]]=t\n    \n    _F += 1\n    _F = extract(_flag.take(_F), _F)\n", '_target_x': array([0.]), 'extract': <function extract at 0x7f360dd30cf8>, '_target_vt': array([-0.045]), 'nonzero': <function nonzero at 0x7f360de45230>, 'hstack': <function hstack at 0x7f360de06758>, 'add': <ufunc 'add'>, 'bool': <type 'bool'>, 'take': <function take at 0x7f360de3b8c0>, 'tau_u': 50.0 * msecond, 'tau_r': 0.2 * second, '_target_I': array([0.]), 'empty': <built-in function empty>, 'tau_FBn': 32.7 * msecond, '__builtins__': {}, 'AFBn': 0.1771, 'len': <built-in function len>, 'AFBp': 0.1548, 'tau_FFp': 66.6 * msecond, 'tau_FBp': 0.2302 * second, 'unique': <function unique at 0x7f360dd0e0c8>, '_target_vm': array([-0.0706]), 'not_equal': <ufunc 'not_equal'>, 'logical_not': <ufunc 'logical_not'>, 'target': NeuronGroup(1, model=<NonlinearStateUpdater with 4 state variables>, threshold=VariableThreshold(threshold_state='vt', state='vm'), reset=StringReset('vm=Vr;x+=b;vt=VTmax')), 's': 1e-08, 'exp': <ufunc 'exp'>, 'Umin': 0, 'Umax': 1.0}
synapses_pre
[array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32)]
post code
FFp=FFp*exp(-(-lastupdate + t)/tau_FFp)
FBn=FBn*exp(-(-lastupdate + t)/tau_FBn)
u=U + (-U + u)*exp(-(-lastupdate + t)/tau_u)
FBp=FBp*exp(-(-lastupdate + t)/tau_FBp)
R=(R - 1)*exp(-(-lastupdate + t)/tau_r) + 1
A=A+etaA*(AFFp*FFp*FBn);
A=A-etaA*0.5*mean(AFFp*FFp*FBn);
A=clip(A,Amin,Amax);
w=U*A;
FBp+=1.;FBn+=1.

lastupdate=t

_namespace post
{'clip': <function clip at 0x7f360de45398>, '_original_code_string': '_post_neurons = _post[_synapses]\nFFp[_synapses]=FFp[_synapses]*exp(-(-lastupdate[_synapses] + t)/tau_FFp)\nFBn[_synapses]=FBn[_synapses]*exp(-(-lastupdate[_synapses] + t)/tau_FBn)\nu[_synapses]=U[_synapses] + (-U[_synapses] + u[_synapses])*exp(-(-lastupdate[_synapses] + t)/tau_u)\nFBp[_synapses]=FBp[_synapses]*exp(-(-lastupdate[_synapses] + t)/tau_FBp)\nR[_synapses]=(R[_synapses] - 1)*exp(-(-lastupdate[_synapses] + t)/tau_r) + 1\nA[_synapses]=A[_synapses]+etaA*(AFFp*FFp[_synapses]*FBn[_synapses]);\nA[_synapses]=A[_synapses]-etaA*0.5*mean(AFFp*FFp[_synapses]*FBn[_synapses]);\nA[_synapses]=clip(A[_synapses],Amin,Amax);\nw[_synapses]=U[_synapses]*A[_synapses];\nFBp[_synapses]+=1.;FBn[_synapses]+=1.\n\nlastupdate[_synapses]=t\n\nprint _synapses\nprint _post_neurons\nprint mean(AFFp*FFp[_synapses]*FBn[_synapses])\n', '_target_x': array([0.]), 'etaA': 0.15, 'extract': <function extract at 0x7f360dd30cf8>, '_target_vt': array([-0.045]), 'nonzero': <function nonzero at 0x7f360de45230>, 'hstack': <function hstack at 0x7f360de06758>, 'add': <ufunc 'add'>, 'bool': <type 'bool'>, 'take': <function take at 0x7f360de3b8c0>, 'tau_u': 50.0 * msecond, 'tau_r': 0.2 * second, 'Amax': 2.0, 'empty': <built-in function empty>, 'Amin': 0, 'tau_FBn': 32.7 * msecond, '__builtins__': {}, 'len': <built-in function len>, 'tau_FFp': 66.6 * msecond, 'tau_FBp': 0.2302 * second, 'unique': <function unique at 0x7f360dd0e0c8>, '_target_vm': array([-0.0706]), 'not_equal': <ufunc 'not_equal'>, 'logical_not': <ufunc 'logical_not'>, 'target': NeuronGroup(1, model=<NonlinearStateUpdater with 4 state variables>, threshold=VariableThreshold(threshold_state='vt', state='vm'), reset=StringReset('vm=Vr;x+=b;vt=VTmax')), 'AFFp': 0.0618, 'exp': <ufunc 'exp'>, '_target_I': array([0.]), 'mean': <function mean at 0x7f360de45cf8>}
_namespace post code
_post_neurons = _post[_synapses]
FFp[_synapses]=FFp[_synapses]*exp(-(-lastupdate[_synapses] + t)/tau_FFp)
FBn[_synapses]=FBn[_synapses]*exp(-(-lastupdate[_synapses] + t)/tau_FBn)
u[_synapses]=U[_synapses] + (-U[_synapses] + u[_synapses])*exp(-(-lastupdate[_synapses] + t)/tau_u)
FBp[_synapses]=FBp[_synapses]*exp(-(-lastupdate[_synapses] + t)/tau_FBp)
R[_synapses]=(R[_synapses] - 1)*exp(-(-lastupdate[_synapses] + t)/tau_r) + 1
A[_synapses]=A[_synapses]+etaA*(AFFp*FFp[_synapses]*FBn[_synapses]);
A[_synapses]=A[_synapses]-etaA*0.5*mean(AFFp*FFp[_synapses]*FBn[_synapses]);
A[_synapses]=clip(A[_synapses],Amin,Amax);
w[_synapses]=U[_synapses]*A[_synapses];
FBp[_synapses]+=1.;FBn[_synapses]+=1.

lastupdate[_synapses]=t

print _synapses
print _post_neurons
print mean(AFFp*FFp[_synapses]*FBn[_synapses])

syn
Synapses of 0 neurons
syn
Synapses of 100 neurons
size(syn.U[:])
100
syn.U[0]
9.92950430585e-06
Synapses done
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[89]
time:
0.0
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[73]
time:
0.002
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[23]
time:
0.004
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[20 45]
time:
0.005
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[81]
time:
0.006
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[ 7 27]
time:
0.007
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[25]
time:
0.009
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[0]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
time:
0.01
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
 96 97 98 99]
[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
0.00516357734517
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[11 27]
time:
0.011
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[0]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[27]
time:
0.013
time:
0.013
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
 96 97 98 99]
[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
0.0129151362347
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[29]
time:
0.015
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[32]
time:
0.019
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[27]
time:
0.02
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[41 73]
time:
0.025
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[14 27]
time:
0.026
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[22 27 31]
time:
0.028
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[24]
time:
0.029
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[22]
time:
0.03
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[0]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[27]
time:
0.031
time:
0.031
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
 96 97 98 99]
[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
0.0264012039409
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
self
NeuronGroup of 1 neurons
Now _threshold
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
Simulation time: 0.0774369239807

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////

Synapses//////////////////////////////////////////////////////
