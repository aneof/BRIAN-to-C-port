F_input1
[ 3.00046669  3.00119471  3.00293851  3.00694417  3.01576674  3.03439471
  3.0720891   3.14516962  3.28087308  3.52212284  3.93253145  4.60023037
  5.63833385  7.17931602  9.36075831 12.30123886 16.06775312 20.63962165
 25.87735603 31.50694101 37.12900474 42.25769994 46.38646828 49.06933765
 50.         49.06933765 46.38646828 42.25769994 37.12900474 31.50694101
 25.87735603 20.63962165 16.06775312 12.30123886  9.36075831  7.17931602
  5.63833385  4.60023037  3.93253145  3.52212284  3.28087308  3.14516962
  3.0720891   3.03439471  3.01576674  3.00694417  3.00293851  3.00119471
  3.00046669  3.00017515  3.00006316  3.00002188  3.00000728  3.00000233
  3.00000072  3.00000021  3.00000006  3.00000002  3.          3.
  3.          3.          3.          3.          3.          3.
  3.          3.          3.          3.          3.          3.
  3.          3.          3.          3.          3.          3.
  3.          3.          3.          3.          3.          3.
  3.          3.          3.          3.          3.          3.
  3.          3.          3.          3.          3.          3.
  3.          3.          3.          3.        ]
0*amp/second
(c*(vm-EL)-x)/tauw
-(vt-vtrest)/tauvt
(gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C
0*amp/second
(c*(vm-EL)-x)/tauw
-(vt-vtrest)/tauvt
(gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C
VariableThreshold
Magic
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

0*amp/second
0*1.0/1.0
(c*(vm-EL)-x)/tauw
(4e-09*(vm+0.0706)-x)/0.14400000000000002
-(vt-vtrest)/tauvt
-(vt+0.045)/0.05
(gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C
(3.0000000000000004e-08*(-0.0706-vm)+3.0000000000000004e-08*0.002*exp((vm-vt)/0.002)+I-x)/2.81e-10
freeze
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

NonlinearStateUpdater
['vm', 'vt', 'x', 'I']
1
Vt
[-0.045 -0.045]
Vm
[-0.0706 -0.0706]
NeuronGroup done
1
expr
<_sre.SRE_Pattern object at 0x7f9d0e88a1d0>
pre
I=s*A*R*u; 
U=clip(U+etaU*(-AFBn*FBn*FBp + AFBp*FBp*FFp),Umin,Umax);
w=U*A;
FFp+=1; R-=R*u; u+=U*(1-u)

post
A=A+etaA*(AFFp*FFp*FBn);
A=A-etaA*0.5*mean(AFFp*FFp*FBn);
A=clip(A,Amin,Amax);
w=U*A;
FBp+=1.;FBn+=1.

lastupdate=t

synapses model
dA/dt = 0*1         /second [diffeq]
dlastupdate/dt = 0*second/second [diffeq]
dFBp/dt = 0*1/second [diffeq]
dFFp/dt = 0*1/second [diffeq]
dR/dt = 0*1/second [diffeq]
du/dt = 0*1/second [diffeq]
dw/dt = 0*1/second [diffeq]
dU/dt = 0*1/second [diffeq]
dFBn/dt = 0*1/second [diffeq]

Magic
0*1         /second
0*second/second
0*1/second
0*1/second
0*1/second
0*1/second
0*1/second
0*1/second
0*1/second
0*1         /second
0*second/second
0*1/second
0*1/second
0*1/second
0*1/second
0*1/second
0*1/second
0*1/second
LinearStateUpdater
['A', 'lastupdate', 'FBp', 'FFp', 'R', 'u', 'w', 'U', 'FBn']
5
pre_list
['FFp=FFp*exp(-(-lastupdate + t)/tau_FFp)\nFBn=FBn*exp(-(-lastupdate + t)/tau_FBn)\nu=U + (-U + u)*exp(-(-lastupdate + t)/tau_u)\nFBp=FBp*exp(-(-lastupdate + t)/tau_FBp)\nR=(R - 1)*exp(-(-lastupdate + t)/tau_r) + 1\nI=s*A*R*u; \nU=clip(U+etaU*(-AFBn*FBn*FBp + AFBp*FBp*FFp),Umin,Umax);\nw=U*A;\nFFp+=1; R-=R*u; u+=U*(1-u)\n\nlastupdate=t\n']
pre code
FFp=FFp*exp(-(-lastupdate + t)/tau_FFp)
FBn=FBn*exp(-(-lastupdate + t)/tau_FBn)
u=U + (-U + u)*exp(-(-lastupdate + t)/tau_u)
FBp=FBp*exp(-(-lastupdate + t)/tau_FBp)
R=(R - 1)*exp(-(-lastupdate + t)/tau_r) + 1
I=s*A*R*u; 
U=clip(U+etaU*(-AFBn*FBn*FBp + AFBp*FBp*FFp),Umin,Umax);
w=U*A;
FFp+=1; R-=R*u; u+=U*(1-u)

lastupdate=t

_namespace
{'etaU': 0.15, 'clip': <function clip at 0x7f9d212b4938>, '_original_code_string': "_post_neurons = _post.data.take(_synapses)\n_perm = _post_neurons.argsort(kind='mergesort')\n_aux = _post_neurons.take(_perm)\n_flag = empty(len(_aux)+1, dtype=bool)\n_flag[0] = _flag[-1] = 1\nnot_equal(_aux[1:], _aux[:-1], _flag[1:-1])\n_F = _flag.nonzero()[0][:-1]\nlogical_not(_flag, _flag)\nwhile len(_F):\n    _u = _aux.take(_F)\n    _i = _perm.take(_F)\n    FFp[_synapses[_i]]=FFp[_synapses[_i]]*exp(-(-lastupdate[_synapses[_i]] + t)/tau_FFp)\n    FBn[_synapses[_i]]=FBn[_synapses[_i]]*exp(-(-lastupdate[_synapses[_i]] + t)/tau_FBn)\n    u[_synapses[_i]]=U[_synapses[_i]] + (-U[_synapses[_i]] + u[_synapses[_i]])*exp(-(-lastupdate[_synapses[_i]] + t)/tau_u)\n    FBp[_synapses[_i]]=FBp[_synapses[_i]]*exp(-(-lastupdate[_synapses[_i]] + t)/tau_FBp)\n    R[_synapses[_i]]=(R[_synapses[_i]] - 1)*exp(-(-lastupdate[_synapses[_i]] + t)/tau_r) + 1\n    _target_I[_u]=s*A[_synapses[_i]]*R[_synapses[_i]]*u[_synapses[_i]]; \n    U[_synapses[_i]]=clip(U[_synapses[_i]]+etaU*(-AFBn*FBn[_synapses[_i]]*FBp[_synapses[_i]] + AFBp*FBp[_synapses[_i]]*FFp[_synapses[_i]]),Umin,Umax);\n    w[_synapses[_i]]=U[_synapses[_i]]*A[_synapses[_i]];\n    FFp[_synapses[_i]]+=1; R[_synapses[_i]]-=R[_synapses[_i]]*u[_synapses[_i]]; u[_synapses[_i]]+=U[_synapses[_i]]*(1-u[_synapses[_i]])\n    \n    lastupdate[_synapses[_i]]=t\n    \n    _F += 1\n    _F = extract(_flag.take(_F), _F)\n", '_target_x': array([0., 0.]), 'extract': <function extract at 0x7f9d1f1a3578>, '_target_vt': array([-0.045, -0.045]), 'nonzero': <function nonzero at 0x7f9d212b47d0>, 'hstack': <function hstack at 0x7f9d1f26ef50>, 'add': <ufunc 'add'>, 'bool': <type 'bool'>, 'take': <function take at 0x7f9d212a7e60>, 'tau_u': 50.0 * msecond, 'tau_r': 0.2 * second, '_target_I': array([0., 0.]), 'empty': <built-in function empty>, 'tau_FBn': 32.7 * msecond, '__builtins__': {}, 'AFBn': 0.1771, 'len': <built-in function len>, 'AFBp': 0.1548, 'tau_FFp': 66.6 * msecond, 'tau_FBp': 0.2302 * second, 'unique': <function unique at 0x7f9d1f17c8c0>, '_target_vm': array([-0.0706, -0.0706]), 'not_equal': <ufunc 'not_equal'>, 'logical_not': <ufunc 'logical_not'>, 'target': NeuronGroup(2, model=<NonlinearStateUpdater with 4 state variables>, threshold=VariableThreshold(threshold_state='vt', state='vm'), reset=StringReset('vm=Vr;x+=b;vt=VTmax')), 's': 1e-08, 'exp': <ufunc 'exp'>, 'Umin': 0, 'Umax': 1.0}
synapses_pre
[array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32), array([], dtype=int32)]
post code
FFp=FFp*exp(-(-lastupdate + t)/tau_FFp)
FBn=FBn*exp(-(-lastupdate + t)/tau_FBn)
u=U + (-U + u)*exp(-(-lastupdate + t)/tau_u)
FBp=FBp*exp(-(-lastupdate + t)/tau_FBp)
R=(R - 1)*exp(-(-lastupdate + t)/tau_r) + 1
A=A+etaA*(AFFp*FFp*FBn);
A=A-etaA*0.5*mean(AFFp*FFp*FBn);
A=clip(A,Amin,Amax);
w=U*A;
FBp+=1.;FBn+=1.

lastupdate=t

_namespace post
{'clip': <function clip at 0x7f9d212b4938>, '_original_code_string': '_post_neurons = _post[_synapses]\nFFp[_synapses]=FFp[_synapses]*exp(-(-lastupdate[_synapses] + t)/tau_FFp)\nFBn[_synapses]=FBn[_synapses]*exp(-(-lastupdate[_synapses] + t)/tau_FBn)\nu[_synapses]=U[_synapses] + (-U[_synapses] + u[_synapses])*exp(-(-lastupdate[_synapses] + t)/tau_u)\nFBp[_synapses]=FBp[_synapses]*exp(-(-lastupdate[_synapses] + t)/tau_FBp)\nR[_synapses]=(R[_synapses] - 1)*exp(-(-lastupdate[_synapses] + t)/tau_r) + 1\nA[_synapses]=A[_synapses]+etaA*(AFFp*FFp[_synapses]*FBn[_synapses]);\nA[_synapses]=A[_synapses]-etaA*0.5*mean(AFFp*FFp[_synapses]*FBn[_synapses]);\nA[_synapses]=clip(A[_synapses],Amin,Amax);\nw[_synapses]=U[_synapses]*A[_synapses];\nFBp[_synapses]+=1.;FBn[_synapses]+=1.\n\nlastupdate[_synapses]=t\n\nprint _synapses\nprint _post_neurons\nprint mean(AFFp*FFp[_synapses]*FBn[_synapses])\n', '_target_x': array([0., 0.]), 'etaA': 0.15, 'extract': <function extract at 0x7f9d1f1a3578>, '_target_vt': array([-0.045, -0.045]), 'nonzero': <function nonzero at 0x7f9d212b47d0>, 'hstack': <function hstack at 0x7f9d1f26ef50>, 'add': <ufunc 'add'>, 'bool': <type 'bool'>, 'take': <function take at 0x7f9d212a7e60>, 'tau_u': 50.0 * msecond, 'tau_r': 0.2 * second, 'Amax': 2.0, 'empty': <built-in function empty>, 'Amin': 0, 'tau_FBn': 32.7 * msecond, '__builtins__': {}, 'len': <built-in function len>, 'tau_FFp': 66.6 * msecond, 'tau_FBp': 0.2302 * second, 'unique': <function unique at 0x7f9d1f17c8c0>, '_target_vm': array([-0.0706, -0.0706]), 'not_equal': <ufunc 'not_equal'>, 'logical_not': <ufunc 'logical_not'>, 'target': NeuronGroup(2, model=<NonlinearStateUpdater with 4 state variables>, threshold=VariableThreshold(threshold_state='vt', state='vm'), reset=StringReset('vm=Vr;x+=b;vt=VTmax')), 'AFFp': 0.0618, 'exp': <ufunc 'exp'>, '_target_I': array([0., 0.]), 'mean': <function mean at 0x7f9d212b5320>}
_namespace post code
_post_neurons = _post[_synapses]
FFp[_synapses]=FFp[_synapses]*exp(-(-lastupdate[_synapses] + t)/tau_FFp)
FBn[_synapses]=FBn[_synapses]*exp(-(-lastupdate[_synapses] + t)/tau_FBn)
u[_synapses]=U[_synapses] + (-U[_synapses] + u[_synapses])*exp(-(-lastupdate[_synapses] + t)/tau_u)
FBp[_synapses]=FBp[_synapses]*exp(-(-lastupdate[_synapses] + t)/tau_FBp)
R[_synapses]=(R[_synapses] - 1)*exp(-(-lastupdate[_synapses] + t)/tau_r) + 1
A[_synapses]=A[_synapses]+etaA*(AFFp*FFp[_synapses]*FBn[_synapses]);
A[_synapses]=A[_synapses]-etaA*0.5*mean(AFFp*FFp[_synapses]*FBn[_synapses]);
A[_synapses]=clip(A[_synapses],Amin,Amax);
w[_synapses]=U[_synapses]*A[_synapses];
FBp[_synapses]+=1.;FBn[_synapses]+=1.

lastupdate[_synapses]=t

print _synapses
print _post_neurons
print mean(AFFp*FFp[_synapses]*FBn[_synapses])

syn
Synapses of 0 neurons
syn
Synapses of 100 neurons
size(syn.U[:])
100
syn.U[0]
9.92950430585e-06
Synapses done
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.0706 -0.0706]
P.state_(self.threshold_state)
[-0.045 -0.045]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.0706 -0.0706]
P.state_(self.threshold_state)
[-0.045 -0.045]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.0706 -0.0706]
P.state_(self.threshold_state)
[-0.045 -0.045]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.0706 -0.0706]
P.state_(self.threshold_state)
[-0.045 -0.045]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.0706 -0.0706]
P.state_(self.threshold_state)
[-0.045 -0.045]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[23]
(Python) In propagate: spikes =  [23]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.06570399 -0.06633962]
P.state_(self.threshold_state)
[-0.045 -0.045]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[20 45]
(Python) In propagate: spikes =  [20 45]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.06622669 -0.06679446]
P.state_(self.threshold_state)
[-0.045 -0.045]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.06669407 -0.06720116]
P.state_(self.threshold_state)
[-0.045 -0.045]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[ 7 27]
(Python) In propagate: spikes =  [ 7 27]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.06653584 -0.06724355]
P.state_(self.threshold_state)
[-0.045 -0.045]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.06639489 -0.06728174]
P.state_(self.threshold_state)
[-0.045 -0.045]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[25]
(Python) In propagate: spikes =  [25]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.06253769 -0.06463667]
P.state_(self.threshold_state)
[-0.045 -0.045]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.05909266 -0.0622743 ]
P.state_(self.threshold_state)
[-0.045 -0.045]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[11 27]
(Python) In propagate: spikes =  [11 27]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.05553839 -0.06046719]
P.state_(self.threshold_state)
[-0.045 -0.045]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.05236378 -0.05885376]
P.state_(self.threshold_state)
[-0.045 -0.045]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[27]
(Python) In propagate: spikes =  [27]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04722954 -0.05578641]
P.state_(self.threshold_state)
[-0.045 -0.045]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04258055 -0.05304689]
P.state_(self.threshold_state)
[-0.045 -0.045]
[0]
spikes
[0]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[29]
(Python) In propagate: spikes =  [0]
(Python) In propagate: spikes =  [29]
[ 0  2  4  6  8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46
 48 50 52 54 56 58 60 62 64 66 68 70 72 74 76 78 80 82 84 86 88 90 92 94
 96 98]
[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0]
0.0100962810841
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.0708168  -0.05488843]
P.state_(self.threshold_state)
[ 0.01674 -0.045  ]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.07100839 -0.05653734]
P.state_(self.threshold_state)
[ 0.0155052 -0.045    ]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.07117747 -0.05801257]
P.state_(self.threshold_state)
[ 0.0142951 -0.045    ]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.07132643 -0.05933197]
P.state_(self.threshold_state)
[ 0.01310919 -0.045     ]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[32]
(Python) In propagate: spikes =  [32]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.07145742 -0.06051182]
P.state_(self.threshold_state)
[ 0.01194701 -0.045     ]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[27]
(Python) In propagate: spikes =  [27]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.0648343  -0.05691033]
P.state_(self.threshold_state)
[ 0.01080807 -0.045     ]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.0589162  -0.05369378]
P.state_(self.threshold_state)
[ 0.00969191 -0.045     ]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.05362853 -0.05081967]
P.state_(self.threshold_state)
[ 0.00859807 -0.045     ]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04890457 -0.04824511]
P.state_(self.threshold_state)
[ 0.00752611 -0.045     ]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04468468 -0.04591673]
P.state_(self.threshold_state)
[ 0.00647559 -0.045     ]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[41]
(Python) In propagate: spikes =  [41]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04772929 -0.04843675]
P.state_(self.threshold_state)
[ 0.00544608 -0.045     ]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[14 27]
(Python) In propagate: spikes =  [14 27]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04449397 -0.04635106]
P.state_(self.threshold_state)
[ 0.00443715 -0.045     ]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04160436 -0.04441971]
P.state_(self.threshold_state)
[ 0.00344841 -0.045     ]
[1]
spikes
[1]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[22 27 31]
(Python) In propagate: spikes =  [1]
(Python) In propagate: spikes =  [22 27 31]
[ 1  3  5  7  9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47
 49 51 53 55 57 59 61 63 65 67 69 71 73 75 77 79 81 83 85 87 89 91 93 95
 97 99]
[1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 1 1 1 1 1 1 1 1 1 1 1 1 1]
0.0142550448647
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04035564 -0.06698797]
P.state_(self.threshold_state)
[0.00247944 0.01674   ]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[24]
(Python) In propagate: spikes =  [24]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.02379513 -0.05205736]
P.state_(self.threshold_state)
[0.00152985 0.0155052 ]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[22]
(Python) In propagate: spikes =  [22]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[ 0.01147598 -0.01359981]
P.state_(self.threshold_state)
[0.00059926 0.0142951 ]
[0]
spikes
[0]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[27]
(Python) In propagate: spikes =  [0]
(Python) In propagate: spikes =  [27]
[ 0  2  4  6  8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46
 48 50 52 54 56 58 60 62 64 66 68 70 72 74 76 78 80 82 84 86 88 90 92 94
 96 98]
[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0]
0.0278739357098
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.06826716 -0.01690707]
P.state_(self.threshold_state)
[0.01674    0.01310919]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.0661794  -0.01986473]
P.state_(self.threshold_state)
[0.0155052  0.01194701]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.0643108  -0.02250975]
P.state_(self.threshold_state)
[0.0142951  0.01080807]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.0626382  -0.02487521]
P.state_(self.threshold_state)
[0.01310919 0.00969191]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.06114088 -0.02699067]
P.state_(self.threshold_state)
[0.01194701 0.00859807]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.05980032 -0.02888256]
P.state_(self.threshold_state)
[0.01080807 0.00752611]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.05859996 -0.03057453]
P.state_(self.threshold_state)
[0.00969191 0.00647559]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.05752497 -0.03208772]
P.state_(self.threshold_state)
[0.00859807 0.00544608]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.05656212 -0.03344104]
P.state_(self.threshold_state)
[0.00752611 0.00443715]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.05569954 -0.0346514 ]
P.state_(self.threshold_state)
[0.00647559 0.00344841]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.05492666 -0.03573391]
P.state_(self.threshold_state)
[0.00544608 0.00247944]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.05423399 -0.03670209]
P.state_(self.threshold_state)
[0.00443715 0.00152985]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.05361307 -0.03756804]
P.state_(self.threshold_state)
[0.00344841 0.00059926]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.05305631 -0.03834257]
P.state_(self.threshold_state)
[ 0.00247944 -0.00031273]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.05255695 -0.03903534]
P.state_(self.threshold_state)
[ 0.00152985 -0.00120647]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.05210893 -0.03965499]
P.state_(self.threshold_state)
[ 0.00059926 -0.00208234]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.05170683 -0.04020927]
P.state_(self.threshold_state)
[-0.00031273 -0.0029407 ]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.05134579 -0.04070508]
P.state_(self.threshold_state)
[-0.00120647 -0.00378188]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.0510215 -0.0411486]
P.state_(self.threshold_state)
[-0.00208234 -0.00460625]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.05073008 -0.04154537]
P.state_(self.threshold_state)
[-0.0029407  -0.00541412]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.05046806 -0.04190033]
P.state_(self.threshold_state)
[-0.00378188 -0.00620584]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.05023234 -0.0422179 ]
P.state_(self.threshold_state)
[-0.00460625 -0.00698172]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.05002016 -0.04250202]
P.state_(self.threshold_state)
[-0.00541412 -0.00774209]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04982903 -0.04275625]
P.state_(self.threshold_state)
[-0.00620584 -0.00848725]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04965674 -0.04298373]
P.state_(self.threshold_state)
[-0.00698172 -0.0092175 ]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.0495013 -0.0431873]
P.state_(self.threshold_state)
[-0.00774209 -0.00993315]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04936096 -0.04336949]
P.state_(self.threshold_state)
[-0.00848725 -0.01063449]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04923411 -0.04353254]
P.state_(self.threshold_state)
[-0.0092175 -0.0113218]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04911935 -0.0436785 ]
P.state_(self.threshold_state)
[-0.00993315 -0.01199536]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04901541 -0.04380916]
P.state_(self.threshold_state)
[-0.01063449 -0.01265545]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04892114 -0.04392613]
P.state_(self.threshold_state)
[-0.0113218  -0.01330235]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04883555 -0.04403088]
P.state_(self.threshold_state)
[-0.01199536 -0.0139363 ]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04875772 -0.04412468]
P.state_(self.threshold_state)
[-0.01265545 -0.01455757]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04868684 -0.0442087 ]
P.state_(self.threshold_state)
[-0.01330235 -0.01516642]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04862219 -0.04428397]
P.state_(self.threshold_state)
[-0.0139363  -0.01576309]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04856312 -0.04435141]
P.state_(self.threshold_state)
[-0.01455757 -0.01634783]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04850905 -0.04441185]
P.state_(self.threshold_state)
[-0.01516642 -0.01692087]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04845945 -0.04446603]
P.state_(self.threshold_state)
[-0.01576309 -0.01748246]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04841387 -0.04451461]
P.state_(self.threshold_state)
[-0.01634783 -0.01803281]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.0483719  -0.04455818]
P.state_(self.threshold_state)
[-0.01692087 -0.01857215]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04833315 -0.04459727]
P.state_(self.threshold_state)
[-0.01748246 -0.01910071]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.0482973  -0.04463235]
P.state_(self.threshold_state)
[-0.01803281 -0.01961869]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04826405 -0.04466385]
P.state_(self.threshold_state)
[-0.01857215 -0.02012632]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04823313 -0.04469215]
P.state_(self.threshold_state)
[-0.01910071 -0.02062379]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04820432 -0.04471757]
P.state_(self.threshold_state)
[-0.01961869 -0.02111132]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04817739 -0.04474043]
P.state_(self.threshold_state)
[-0.02012632 -0.02158909]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04815215 -0.04476099]
P.state_(self.threshold_state)
[-0.02062379 -0.02205731]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04812844 -0.0447795 ]
P.state_(self.threshold_state)
[-0.02111132 -0.02251616]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.0481061  -0.04479618]
P.state_(self.threshold_state)
[-0.02158909 -0.02296584]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.048085  -0.0448112]
P.state_(self.threshold_state)
[-0.02205731 -0.02340652]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04806501 -0.04482476]
P.state_(self.threshold_state)
[-0.02251616 -0.02383839]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04804603 -0.044837  ]
P.state_(self.threshold_state)
[-0.02296584 -0.02426163]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04802795 -0.04484806]
P.state_(self.threshold_state)
[-0.02340652 -0.02467639]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.0480107  -0.04485806]
P.state_(self.threshold_state)
[-0.02383839 -0.02508287]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04799419 -0.04486712]
P.state_(self.threshold_state)
[-0.02426163 -0.02548121]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04797835 -0.04487533]
P.state_(self.threshold_state)
[-0.02467639 -0.02587158]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04796312 -0.04488279]
P.state_(self.threshold_state)
[-0.02508287 -0.02625415]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04794844 -0.04488956]
P.state_(self.threshold_state)
[-0.02548121 -0.02662907]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04793427 -0.04489573]
P.state_(self.threshold_state)
[-0.02587158 -0.02699649]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04792056 -0.04490134]
P.state_(self.threshold_state)
[-0.02625415 -0.02735656]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04790726 -0.04490647]
P.state_(self.threshold_state)
[-0.02662907 -0.02770943]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04789435 -0.04491116]
P.state_(self.threshold_state)
[-0.02699649 -0.02805524]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04788178 -0.04491546]
P.state_(self.threshold_state)
[-0.02735656 -0.02839413]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04786954 -0.04491939]
P.state_(self.threshold_state)
[-0.02770943 -0.02872625]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04785759 -0.04492301]
P.state_(self.threshold_state)
[-0.02805524 -0.02905173]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04784591 -0.04492634]
P.state_(self.threshold_state)
[-0.02839413 -0.02937069]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04783448 -0.04492941]
P.state_(self.threshold_state)
[-0.02872625 -0.02968328]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-vt)/DeltaT)+I-x)/C [diffeq]
dvt/dt = -(vt-vtrest)/tauvt [diffeq]
dx/dt = (c*(vm-EL)-x)/tauw [diffeq]
dI/dt = 0*amp/second [diffeq]

self
NeuronGroup of 2 neurons
Now _threshold
P.state_(self.state)
[-0.04782329 -0.04493224]
P.state_(self.threshold_state)
[-0.02905173 -0.02998961]
[]
spikes
[]
self
SpikeGeneratorGroup of 100 neurons
Now _threshold
spikes
[]
Simulation time: 0.0754668712616
